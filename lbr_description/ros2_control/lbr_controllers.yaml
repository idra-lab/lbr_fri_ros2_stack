# Use of /** so that the configurations hold for controller
# managers regardless of their namespace. Usefull in multi-robot setups.
/**/controller_manager:
  ros__parameters:
    update_rate: 1000

    # ROS 2 control broadcasters
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    force_torque_broadcaster:
      type: force_torque_sensor_broadcaster/ForceTorqueSensorBroadcaster

    # LBR ROS 2 control broadcasters
    lbr_state_broadcaster:
      type: lbr_ros2_control/LBRStateBroadcaster

    # ROS 2 control controllers
    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController

    forward_position_controller:
      type: position_controllers/JointGroupPositionController

    # LBR ROS 2 control controllers
    lbr_joint_position_command_controller:
      type: lbr_ros2_control/LBRJointPositionCommandController

    lbr_torque_command_controller:
      type: lbr_ros2_control/LBRTorqueCommandController

    lbr_wrench_command_controller:
      type: lbr_ros2_control/LBRWrenchCommandController

    cartesian_impedance_controller:
      type: cartesian_impedance_controller/CartesianImpedanceController
    
    joint_impedance_controller:
      type: joint_impedance_controller/JointImpedanceController

    gravity_compensation:
      type: gravity_compensation/GravityCompensation


/**/force_torque_broadcaster:
  ros__parameters:
    frame_id: lbr/lbr_link_ee
    sensor_name: estimated_ft_sensor

/**/joint_trajectory_controller:
  ros__parameters:
    joints:
      - lbr_A1
      - lbr_A2
      - lbr_A3
      - lbr_A4
      - lbr_A5
      - lbr_A6
      - lbr_A7
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    state_publish_rate: 50.0
    action_monitor_rate: 20.0

/**/forward_position_controller:
  ros__parameters:
    joints:
      - lbr_A1
      - lbr_A2
      - lbr_A3
      - lbr_A4
      - lbr_A5
      - lbr_A6
      - lbr_A7
    interface_name: position

/**/cartesian_impedance_controller:
  ros__parameters:
    # when set as true the controller with forward the position commands to the
    # robot together with the torque commands (must be false when using gazebo)
    kuka_hw: true
    # This is the tip of the robot tool that you usually use for your task.
    # For instance, it could be the drilling bit of a screwdriver or a grinding
    # tool.  When you specify a target_wrench, i.e. some additional forces that
    # your robot should apply to its environment, that target_wrench gets
    # applied in this frame.
    end_effector_link: "lbr_link_ee"

    # This is usually the link directly before the first actuated joint.  All
    # controllers will build a kinematic chain from this link up to
    # end_effector_link.  It's also the reference frame for the superposition
    # of error components in all controllers.
    robot_base_link: "lbr_link_0"

    # This is the URDF link of your sensor. Sensor signals are assumed to be
    # given in this frame.  It's important that this link is located somewhere
    # between end_effector_link and robot_base_link.  If that's not the case,
    # the controllers won't initialize and will emit an error message.
    ft_sensor_ref_link: "lbr_link_ee"

    # This is the link that the robot feels compliant about. It does not need
    # to coincide with the end_effector_link, but for many use cases, this
    # configuration is handy. When working with a screwdriver, for instance, 
    # setting compliance_ref_link == end_effector_link makes it easy to specify
    # downward pushing forces without generating unwanted offset moments.
    # On the other hand, an application could benefit from yielding a little in
    # the robot's wrist while drawing a line on a surface with a pen.
    compliance_ref_link: "lbr_link_ee"

    command_interfaces:
      - effort
    state_interfaces:
      - position
      - velocity
    joints:
      - lbr_A1
      - lbr_A2
      - lbr_A3
      - lbr_A4
      - lbr_A5
      - lbr_A6
      - lbr_A7
    max_impedance_force: 10000.0 # N
    delta_tau_max: 1.0 # Nm
    stiffness:  # w.r.t. compliance_ref_link coordinates
        trans_x: 800.0
        trans_y: 800.0
        trans_z: 800.0
        rot_x: 20.0
        rot_y: 20.0
        rot_z: 20.0
    nullspace_stiffness: 0.0 # 10.0
    compensate_gravity: false
    compensate_coriolis: false

/**/joint_impedance_controller:
  ros__parameters:
    kuka_hw: true
    end_effector_link: "lbr_link_ee"
    robot_base_link: "lbr_link_0"
    ft_sensor_ref_link: "lbr_link_ee"
    compliance_ref_link: "lbr_link_ee"

    command_interfaces:
      - effort
    state_interfaces:
      - position
      - velocity
    joints:
      - lbr_A1
      - lbr_A2
      - lbr_A3
      - lbr_A4
      - lbr_A5
      - lbr_A6
      - lbr_A7
    stiffness:
      joint1: 200.0
      joint2: 200.0
      joint3: 200.0
      joint4: 200.0
      joint5: 100.0
      joint6: 100.0
      joint7: 100.0
    nullspace_stiffness: 0.0 # 10.0
    compensate_gravity: false
    compensate_coriolis: false

    
/**/gravity_compensation:
  ros__parameters:
    end_effector_link: "lbr_link_ee"
    robot_base_link: "lbr_link_0"
    ft_sensor_ref_link: "lbr_link_ee"
    command_interfaces:
      - effort
    state_interfaces:
      - position
      - velocity
    joints:
      - lbr_A1
      - lbr_A2
      - lbr_A3
      - lbr_A4
      - lbr_A5
      - lbr_A6
      - lbr_A7